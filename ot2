gcc -ansi -Wall -pedantic -g preProcessor.c  variables.c errors.c helpers.c parse.c operations.c tables.c encode.c memory.c secondRun.c firstRun.c compiler.c -o compiler -lm
File copied successfully.



First Run:

inside parseSingleLine, Line Number (1):
; file ps.am
state:1

inside parseSingleLine, Line Number (2):
.entry LIST
line 169, type: ENTRY INSTRUCTION
first token: .entry
nexttoken: LIST
line: .entry LIST
state:1

inside parseSingleLine, Line Number (3):
.extern W
line 169, type: EXTERNAL INSTRUCTION
first token: .extern
nexttoken: W
line: .extern W
state:1

inside parseSingleLine, Line Number (4):
MAIN: add r3, LIST
inside parse operands
src:r3,
des:LIST
state:1

inside parseSingleLine, Line Number (5):
LOOP: prn #48
inside parse operands
src:(null)
des:#48
state:1

inside parseSingleLine, Line Number (6):
lea STR, r6
inside parse operands
src:STR,
des:r6
state:1

inside parseSingleLine, Line Number (7):
inc r6
inside parse operands
src:(null)
des:r6
state:1

inside parseSingleLine, Line Number (8):
mov r3, W
inside parse operands
src:r3,
des:W
state:1

inside parseSingleLine, Line Number (9):
sub r1, r4
inside parse operands
src:r1,
des:r4
state:1

inside parseSingleLine, Line Number (10):
bne END
inside parse operands
src:(null)
des:END
state:1

inside parseSingleLine, Line Number (11):
cmp val1, #-6
inside parse operands
src:val1,
des:#-6
state:1

inside parseSingleLine, Line Number (12):
bne END[r15]
inside parse operands
src:(null)
des:END[r15]
state:1

inside parseSingleLine, Line Number (13):
dec K
inside parse operands
src:(null)
des:K
state:1

inside parseSingleLine, Line Number (14):
.entry MAIN
line 169, type: ENTRY INSTRUCTION
first token: .entry
nexttoken: MAIN
line: .entry MAIN
state:1

inside parseSingleLine, Line Number (15):
sub LOOP[r10] ,r14
inside parse operands
src:LOOP[r10]
des:,r14
state:1

inside parseSingleLine, Line Number (16):
END: stop
inside parse operands
src:(null)
des:(null)
state:1

inside parseSingleLine, Line Number (17):
STR: .string "abcd"
line 169, type: STRING INSTRUCTION
first token: STR:
nexttoken: .string
line: STR: .string "abcd"
line 205 inside handle instruction
state:1

inside parseSingleLine, Line Number (18):
LIST: .data 6, -9
line 169, type: DATA INSTRUCTION
first token: LIST:
nexttoken: .data
line: LIST: .data 6, -9
line 189 commaCounter:1 size:2
isValid:1
line 205 inside handle instruction
state:1

inside parseSingleLine, Line Number (19):
.data -100
line 169, type: DATA INSTRUCTION
first token: .data
nexttoken: -100
line: .data -100
line 174
line 189 commaCounter:0 size:1
isValid:1
state:1

inside parseSingleLine, Line Number (20):
.entry K
line 169, type: ENTRY INSTRUCTION
first token: .entry
nexttoken: K
line: .entry K
state:1

inside parseSingleLine, Line Number (21):
K: .data 31
line 169, type: DATA INSTRUCTION
first token: K:
nexttoken: .data
line: K: .data 31
line 189 commaCounter:0 size:1
isValid:1
line 205 inside handle instruction
state:1

inside parseSingleLine, Line Number (22):
.extern val1
line 169, type: EXTERNAL INSTRUCTION
first token: .extern
nexttoken: val1
line: .extern val1
state:1
DC:141 IC:100
ICF:141 DCF:150

		 ~ SYMBOL TABLE ~ 
name	value	base	offset	attributes
K	149	144	5	data,entry
W	0	0	0	external
STR	141	128	13	data
LIST	146	144	2	data,entry
END	140	128	12	code
val1	0	0	0	external
MAIN	100	96	4	code,entry
LOOP	104	96	8	code




Second Run:

inside parseSingleLine, Line Number (1):
; file ps.am
state:1

inside parseSingleLine, Line Number (2):
.entry LIST
state:1

inside parseSingleLine, Line Number (3):
.extern W
state:1

inside parseSingleLine, Line Number (4):
MAIN: add r3, LIST
state:1

inside parseSingleLine, Line Number (5):
LOOP: prn #48
state:1

inside parseSingleLine, Line Number (6):
lea STR, r6
state:1

inside parseSingleLine, Line Number (7):
inc r6
state:1

inside parseSingleLine, Line Number (8):
mov r3, W
state:1

inside parseSingleLine, Line Number (9):
sub r1, r4
state:1

inside parseSingleLine, Line Number (10):
bne END
state:1

inside parseSingleLine, Line Number (11):
cmp val1, #-6
state:1

inside parseSingleLine, Line Number (12):
bne END[r15]
state:1

inside parseSingleLine, Line Number (13):
dec K
state:1

inside parseSingleLine, Line Number (14):
.entry MAIN
state:1

inside parseSingleLine, Line Number (15):
sub LOOP[r10] ,r14
state:1

inside parseSingleLine, Line Number (16):
END: stop
state:1

inside parseSingleLine, Line Number (17):
STR: .string "abcd"
state:1

inside parseSingleLine, Line Number (18):
LIST: .data 6, -9
state:1

inside parseSingleLine, Line Number (19):
.data -100
state:1

inside parseSingleLine, Line Number (20):
.entry K
state:1

inside parseSingleLine, Line Number (21):
K: .data 31
state:1

inside parseSingleLine, Line Number (22):
.extern val1
state:1
Finished Successfully, about to export files!
0100  0100 0000 0000 0000 0100
0101  0100 1010 0011 1100 0001
0102  0010 0000 0000 1001 0000
0103  0010 0000 0000 0000 0010
0104  0100 0010 0000 0000 0000
0105  0100 0000 0000 0000 0000
0106  0100 0000 0000 0011 0000
0107  0100 0000 0000 0001 0000
0108  0100 0000 0000 0101 1011
0109  0010 0000 0000 1000 0000
0110  0010 0000 0000 0000 1101
0111  0100 0000 0000 0010 0000
0112  0100 1100 0000 0001 1011
0113  0100 0000 0000 0000 0001
0114  0100 0000 0011 1100 0001
0115  0001 0000 0000 0000 0000
0116  0001 0000 0000 0000 0000
0117  0100 0000 0000 0000 0100
0118  0100 1011 0011 1101 1011
0119  0100 0000 0010 0000 0000
0120  0100 1011 0000 0000 0001
0121  0010 0000 0000 1000 0000
0122  0010 0000 0000 0000 1100
0123  0100 0000 0000 0000 0010
0124  0100 0000 0000 0100 0000
0125  0001 0000 0000 0000 0000
0126  0001 0000 0000 0000 0000
0127  0100 1111 1111 1111 1010
0128  0100 0000 0010 0000 0000
0129  0100 1011 0000 0011 1110
0130  0010 0000 0000 1000 0000
0131  0010 0000 0000 0000 1100
0132  0100 0000 0000 0010 0000
0133  0100 1101 0000 0000 0001
0134  0010 0000 0000 1001 0000
0135  0010 0000 0000 0000 0101
0136  0100 0000 0000 0000 0100
0137  0100 1011 1010 1011 1011
0138  0010 0000 0000 0110 0000
0139  0010 0000 0000 0000 1000
0140  0100 1000 0000 0000 0000
0141  0100 0000 0000 0110 0001
0142  0100 0000 0000 0110 0010
0143  0100 0000 0000 0110 0011
0144  0100 0000 0000 0110 0100
0145  0100 0000 0000 0000 0000
0146  0100 0000 0000 0000 0110
0147  0100 1111 1111 1111 0111
0148  0100 1111 1111 1001 1100
0149  0100 0000 0000 0001 1111

141   150
0100 A0-B0-C0-D4-E9
0101 A0-B8-CE-D1-E4
0102 A0-B0-C4-D0-E4
0103 A0-B0-C0-D2-E8
0104 A0-B8-C0-D0-E8
0105 A0-B0-C0-D0-E8
0106 A0-B0-C1-D0-E8
0107 A0-B0-C0-D0-E8
0108 A0-B0-C2-DB-E4
0109 A0-B0-C4-D0-E4
0110 A0-B0-C0-DD-E8
0111 A0-B0-C1-D0-E9
0112 A0-B0-C0-DB-E8
0113 A0-B0-C0-D1-E8
0114 A0-B0-CE-D1-E2
0115 A0-B0-C0-D0-E2
0116 A0-B0-C0-D0-E8
0117 A0-B0-C0-D4-E9
0118 A0-BC-CE-DB-E8
0119 A0-B0-C0-D0-E9
0120 A0-BC-C0-D1-E4
0121 A0-B0-C4-D0-E4
0122 A0-B0-C0-DC-E8
0123 A0-B0-C0-D2-E8
0124 A0-B0-C2-D0-E2
0125 A0-B0-C0-D0-E2
0126 A0-B0-C0-D0-E9
0127 A0-BF-CF-DA-E8
0128 A0-B0-C0-D0-E9
0129 A0-BC-C1-DE-E4
0130 A0-B0-C4-D0-E4
0131 A0-B0-C0-DC-E8
0132 A0-B0-C1-D0-E9
0133 A0-B4-C0-D1-E4
0134 A0-B0-C4-D0-E4
0135 A0-B0-C0-D5-E8
0136 A0-B0-C0-D4-E9
0137 A0-BE-C5-DB-E4
0138 A0-B0-C3-D0-E4
0139 A0-B0-C0-D8-E9
0140 A0-B0-C0-D0-E8
0141 A0-B0-C3-D1-E8
0142 A0-B0-C3-D2-E8
0143 A0-B0-C3-D3-E8
0144 A0-B0-C3-D4-E8
0145 A0-B0-C0-D0-E8
0146 A0-B0-C0-D6-E9
0147 A0-BF-CF-D7-E9
0148 A0-BF-CC-DC-E8
0149 A0-B0-C0-DF-E6
