1)	שלב המקרואים: האסמבלר מנתח את קובץ המקור המקורי (.as) ויוצר קובץ מקור מורחב (.am) שמכיל את אותו קוד מקור, כאשר המקרואים שהוגדרו בקובץ המקור מוחלפים בתוכנם. האסמבלר משתמש בטבלת חשיש (Macro Table) לאחסון שמות המקרואים עם מיקומם ההתחלתי והסופי בקובץ. במקרה של שגיאה בתחביר של המקרואים, תירשם הודעת שגיאה ויומן שגיאות ייווצר בתיקייה של קובץ המקור. אם אין שגיאות, האסמבלר ממשיך לשלב הבא.

2)	 הרצה ראשונה ((First Run : במהלך ההרצה הראשונה האסמבלר:
•	סופר את גודל תמונת הנתונים ותמונת ההוראות.
•	מוסיף את הסמלים לטבלת הסמלים.
•	בודק אם יש שגיאות בקוד. אם נמצאו שגיאות או אזהרות, הן נרשמות ל-stderr וליומן השגיאות בתיקיית קובץ המקור.
גם אם יש שגיאות, האסמבלר עובר על כל הקובץ כדי לזהות את כל הבעיות. במידה ונמצאו שגיאות קריטיות, האסמבלר יעבור לשלב הבא ללא המשך ביצוע.

 (3בין ההרצה הראשונה לשנייה: אם ההרצה הראשונה הסתיימה ללא שגיאות קריטיות, האסמבלר:
•	מעדכן את הכתובות של הסמלים בטבלת הסמלים.
•	מקצה את כמות הזיכרון המדויקת הנדרשת ליצירת התמונה הבינארית.
•	מאפס את מוני ההוראות והנתונים וממשיך להרצה השנייה.

4) הרצה שנייה (Second Run) : במהלך ההרצה השנייה, האסמבלר ממיר כל שורת קוד לפורמט בינארי, וממקם את המילים הבינאריות בזיכרון בהתאם לסוגן (נתונים או הוראות). כמו כן, הוא מוסיף כל אופרנד חיצוני לטבלת האופרנדים החיצוניים. במקרה שאופרנד שמוגדר כתווית אינו מופיע בטבלת הסמלים ואינו חיצוני, תירשם הודעת שגיאה והאסמבלר ימשיך לעבור על הקוד. האסמבלר יסיים את ההרצה השנייה אך לא יפיק קבצים במקרה כזה.
5) ייצוא (יצירת קבצי פלט): אם ההרצה השנייה הסתיימה ללא שגיאות, יופקו כל הקבצים הנדרשים בתיקיית קובץ המקור: קובץ אובייקט (.ob), קובץ סמלים חיצוניים (.ext) וקובץ סמלים פנימיים (.ent).
6) סיום: האסמבלר חוזר על התהליך עבור כל קובץ מקור שסופק עד לסיום כל הקבצים.

