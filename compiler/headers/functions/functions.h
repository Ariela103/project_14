/* FUNCTIONS THAT ARE COMMENTED OUT MEANS THAT THEY ARE NOT SHARED ACROSS FILES */

// ---------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------
// --------------------------------------------In errors.c: ----------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------

void yieldError(Error err, int lineNumber);

// ---------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------
// --------------------------------------------In commands.c: ----------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------

Command *getCommandByName(char *s);

// ---------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------
// --------------------------------------------In table.c --------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------

unsigned hash(char *s);
Item *lookup(char *s, ItemType type);
Item *install(char *name, ItemType type);
void printSymbolTable();
void printSymbolItem(Item *item);
Item *addSymbol(char *name, int value, unsigned isCode, unsigned isData, unsigned isEntry, unsigned isExternal);
void updateSymbol(char *name, int newValue);
char *getMacroCodeValue(char *s);
void addMacro(char *name, char *code);
void verifyLabelNaming(char *s);
// ---------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------
// --------------------------------------------In encode.c -------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------

void printObjectFile(EncodedWord *words[], unsigned int ICF, unsigned int DCF);
void printBinaryFile(EncodedWord *words[], unsigned int ICF, unsigned int DCF);
EncodedWord *encodeIntNum(int num);
char *generateFirstWordEncodedToBinary(Command *cmd);
EncodedWord *generateFirstWordEncodedHex(Command *cmd);

// ---------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------
// --------------------------------------------In helpers.c -------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------
char *decToHex(int num);
char *hexToBin(char *hex);
int hex2int(char ch);
char *dec2Bin2sComplement(int n);

// ---------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------
// --------------------------------------------In parse.c -------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------
int parseSingleLine(char *line);
int evalToken(char *token, ParseState state);
int handleCommand(char *cmdName, char *operands);
int handleInstruction(char *instruction, char *params);
int handleLabel(char *labelName, char *nextToken);
int isLabel(char *s);
int isCommand(char *s);
int isInstruction(char *s);
// ---------------------------------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------
// --------------------------------------------In memory.c -------------------------------------------------------
// ---------------------------------------------------------------------------------------------------------------
int writeToMemory(EncodedWord value, DataType type);
// void updateSymbolTableFinalValues();
// void updateDataEntry(Item *p);
